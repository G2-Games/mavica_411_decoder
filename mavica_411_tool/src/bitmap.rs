use std::{fs::File, io::{BufWriter, Write}};

const BITMAP_HEADER: &[u8] = &[
    0x42, 0x4D, 0x36, 0x24, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28, 0x00,
    0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00
];

pub fn write_bitmap(filename: &str, input_buffer: &[u8]) {
    let mut output_file = BufWriter::new(File::create(filename).unwrap());
    output_file.write_all(BITMAP_HEADER).unwrap();

    for rgb in input_buffer.chunks((mavica_411::WIDTH * 3) as usize).rev() {
        output_file.write_all(rgb).unwrap();
    }
}
